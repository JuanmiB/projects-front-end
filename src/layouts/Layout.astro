--- 
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="view-transition" content="same-origin" />
		<title>{title}</title>
	</head>
	<body id="content">
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), rgb(var(--accent-light)) 30%, white 60%);
	}
	html {
		font-family: system-ui, sans-serif;
		background-size: 224px;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	::view-transition-old(root),
	::view-transition-new(root) {
		animation-duration: 0.5;
	}
</style>

<script>
	//vamos a realizar esto solo si el navegador soporta la apo startViewTransition
	if(document.startViewTransition){

		
		window.navigation.addEventListener('navigate', (event) => {
			const toUrl = new URL(event.destination.url);
			
			//si donde estamos es distinto a donde vamos (zona) lo ignoramos hacemos un return. 
			if(location.origin !== toUrl.origin) return;
			
			//si es una navegacion en el mismo dominio, intercepto el evento
			event.intercept({
				async handler(){
					console.log(toUrl);
					//cargamos el contenido de la pagina
					//recupero el contenido de la pagina agarrando el pathname que es la ruta
					const response = await fetch(toUrl.pathname);
					//lo convierto a texto
					const text = await response.text();
					//me quiero quedar solo con el contenido dentro del body
					//tengo que usar un regex para sacar el body
					//un regex es una expresion regular que me permite buscar un patron dentro de un string
					//el patron que quiero buscar es el body y quiero que me devuelva el contenido que esta dentro de los parentesis
					const body = text.match(/<body[^>]*>([\s\S]*)<\/body>/i)[1];
					
					document.startViewTransition(()=>{
						document.body.innerHTML = body;
						document.documentElement.scrollTop = 0;
						
					});
				}
			})
		}
			
		)
	}
	</script>